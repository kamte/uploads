/**
 * @license
 * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ast_value_1 = require("../javascript/ast-value");
const esutil_1 = require("../javascript/esutil");
const analyze_properties_1 = require("./analyze-properties");
/**
 * Returns the object literal that defines a Polymer element configuration from
 * a Polymer element class.
 */
function getConfig(node) {
    const possibleConfigs = node.body.body.filter((n) => n.type === 'MethodDefinition' && n.static === true &&
        n.kind === 'get' && ast_value_1.getIdentifierName(n.key) === 'config');
    const config = possibleConfigs.length === 1 && possibleConfigs[0];
    if (!config) {
        return null;
    }
    const configBody = config.value.body;
    if (configBody.body.length !== 1) {
        // not a single statement function
        return null;
    }
    if (configBody.body[0].type !== 'ReturnStatement') {
        // we only support a return statement
        return null;
    }
    const returnStatement = configBody.body[0];
    const returnValue = returnStatement.argument;
    if (!returnValue || returnValue.type !== 'ObjectExpression') {
        // we only support object literals
        return null;
    }
    return returnValue;
}
exports.getConfig = getConfig;
/**
 * Returns the properties defined in a Polymer config object literal.
 */
function getProperties(node, document) {
    const propertiesNode = esutil_1.getPropertyValue(node, 'properties');
    return propertiesNode ? analyze_properties_1.analyzeProperties(propertiesNode, document) : [];
}
exports.getProperties = getProperties;

//# sourceMappingURL=polymer2-config.js.map
